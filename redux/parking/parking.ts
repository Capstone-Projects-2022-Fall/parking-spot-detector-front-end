import { createSlice, PayloadAction } from "@reduxjs/toolkit";
import { Parking, initialState } from "./index";

/**
 * userSlice function for handling reducers for user actions.
 */
export const parkingSlice = createSlice({
  name: "parking",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    currentParking: (state, action: PayloadAction<Parking>) => {
      state.registration_id = action.payload.registration_id;
      state.coordinates = action.payload.coordinates;
      state.orientation = action.payload.orientation;
      state.parkingAval = action.payload.parkingAval;
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder;
    //TODO add new thunk for parking if needed.
    // .addCase(fetchUserThunk.fulfilled, (state, action) => {
    // })
  },
});

export const { currentParking } = parkingSlice.actions;

// User ID global
// export const selectUserId = (state: RootState) => state.user.id;

export default parkingSlice.reducer;
